{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./src/components/shared/PostTitle.js","webpack:///./src/components/shared/Tags.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","_components_shared_PostTitle__WEBPACK_IMPORTED_MODULE_4__","_components_shared_Tags__WEBPACK_IMPORTED_MODULE_5__","_ref","post","data","markdownRemark","a","createElement","className","frontmatter","description","dangerouslySetInnerHTML","__html","html","to","icon","PostTitle","title","undefined","fields","slug","date","Tags","react__WEBPACK_IMPORTED_MODULE_1___default","tags","map","tag","index","gatsby__WEBPACK_IMPORTED_MODULE_2__","key"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAAAA,EAAA,IAUAE,EAAA,iBAAeW,GAAc,IACnBC,EADmBD,EAAXE,KACIC,eAClB,OACIV,EAAAW,EAAAC,cAACR,EAAA,EAAD,KACIJ,EAAAW,EAAAC,cAAA,OAAKC,UAAU,OACXb,EAAAW,EAAAC,cAAA,OAAKC,UAAU,yBACXb,EAAAW,EAAAC,cAACP,EAAA,EAAD,CAAWI,KAAMD,IACjBR,EAAAW,EAAAC,cAAA,KAAGC,UAAU,qCAAqCL,EAAKM,YAAYC,aAEnEf,EAAAW,EAAAC,cAACN,EAAA,EAAD,CAAMG,KAAMD,IAEZR,EAAAW,EAAAC,cAAA,MAAIC,UAAU,iBACdb,EAAAW,EAAAC,cAAA,OAAKI,wBAAyB,CAAEC,OAAQT,EAAKU,SAGjDlB,EAAAW,EAAAC,cAAA,WACAZ,EAAAW,EAAAC,cAACV,EAAA,KAAD,CAAMiB,GAAG,IAAIN,UAAU,mBACnBb,EAAAW,EAAAC,cAAA,QAAMC,UAAU,QACZb,EAAAW,EAAAC,cAACT,EAAA,EAAD,CAAiBiB,KAAK,kBAE1BpB,EAAAW,EAAAC,cAAA,8CAOb,IAAMd,EAAK,+CCrClB,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KA6Be2B,IAzBG,SAAAd,GAAc,IACxBe,EADab,EAAWF,EAAXE,KAYjB,OARIa,OADgBC,IAAhBd,EAAKe,OAEDxB,EAAAW,EAAAC,cAACV,EAAA,KAAD,CAAMiB,GAAIV,EAAKe,OAAOC,MAClBzB,EAAAW,EAAAC,cAAA,MAAIC,UAAU,6BAA6BJ,EAAKK,YAAYQ,QAG5DtB,EAAAW,EAAAC,cAAA,MAAIC,UAAU,qBAAqBJ,EAAKK,YAAYQ,OAI5DtB,EAAAW,EAAAC,cAAA,OAAKC,UAAU,iBACVS,EACDtB,EAAAW,EAAAC,cAAA,SAAOC,UAAU,iBACZJ,EAAKK,YAAYY,KAClB1B,EAAAW,EAAAC,cAAA,QAAMC,UAAU,QACZb,EAAAW,EAAAC,cAACT,EAAA,EAAD,CAAiBiB,KAAK,0FCT3BO,IAVF,SAAApB,GAAA,IAAGE,EAAHF,EAAGE,KAAH,OACTmB,EAAAjB,EAAAC,cAAA,OAAKC,UAAU,yBACVJ,EAAKK,YAAYe,KAAKC,IAAI,SAACC,EAAKC,GAAN,OACvBJ,EAAAjB,EAAAC,cAACqB,EAAA,KAAD,CAAMd,GAAE,QAAUY,EAAOlB,UAAU,MAAMqB,IAAKF,GAC1CJ,EAAAjB,EAAAC,cAAA,YAAOmB","file":"component---src-templates-blog-post-js-f638334c38ca5039c2f2.js","sourcesContent":["import React from 'react';\r\nimport { Link, graphql } from 'gatsby';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport Layout from '../components/Layout';\r\nimport PostTitle from '../components/shared/PostTitle';\r\nimport Tags from '../components/shared/Tags';\r\n\r\nimport \"prismjs/themes/prism.css\";\r\n\r\nexport default ({ data }) => {\r\n    const post = data.markdownRemark;\r\n    return (\r\n        <Layout>\r\n            <div className=\"box\">\r\n                <div className=\"content has-text-grey\">\r\n                    <PostTitle data={post} />\r\n                    <p className=\"has-text-grey postpreview-content\">{post.frontmatter.description}</p>\r\n\r\n                    <Tags data={post} />\r\n\r\n                    <hr className=\"post-divider\" />\r\n                    <div dangerouslySetInnerHTML={{ __html: post.html }} />\r\n                </div>\r\n\r\n                <hr />\r\n                <Link to=\"/\" className=\"button is-white\">\r\n                    <span className=\"icon\" >\r\n                        <FontAwesomeIcon icon='chevron-left' />\r\n                    </span>\r\n                    <span>Voltar para p√°gina inicial</span>\r\n                </Link>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport const query = graphql`\r\n    query BlogPostQuery($slug: String!) {\r\n        markdownRemark(fields: {slug: {eq: $slug } }) {\r\n        html\r\n        frontmatter {\r\n            tags\r\n            title\r\n            date(formatString: \"DD MMMM, YYYY\", locale:\"pt-br\")\r\n            description\r\n        }\r\n    }\r\n}\r\n`;","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst PostTitle = ({ data }) => {\r\n    let title;\r\n\r\n    if (data.fields !== undefined) {\r\n        title =\r\n            <Link to={data.fields.slug}>\r\n                <h1 className=\"postpreview-title is-link\">{data.frontmatter.title}</h1>\r\n            </Link>;\r\n    } else {\r\n        title = <h1 className=\"postpreview-title\">{data.frontmatter.title}</h1>\r\n    }\r\n\r\n    return (\r\n        <div className=\"has-text-grey\">\r\n            {title}\r\n            <small className=\"has-text-grey\">\r\n                {data.frontmatter.date}\r\n                <span className=\"icon\">\r\n                    <FontAwesomeIcon icon='calendar-alt' />\r\n                </span>\r\n            </small>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostTitle;","import React from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nconst Tags = ({ data }) => (\r\n    <div className=\"tags postpreview-tags\">\r\n        {data.frontmatter.tags.map((tag, index) => (\r\n            <Link to={`/tag/${tag}`} className=\"tag\" key={index}>\r\n                <span>{tag}</span>\r\n            </Link>\r\n        ))}\r\n    </div >\r\n);\r\n\r\nexport default Tags;"],"sourceRoot":""}