{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./src/components/shared/PostTitle.js","webpack:///./src/components/shared/Tags.js","webpack:///./node_modules/core-js/modules/es7.array.includes.js","webpack:///./node_modules/core-js/modules/es6.string.includes.js","webpack:///./node_modules/core-js/modules/_string-context.js","webpack:///./node_modules/core-js/modules/_fails-is-regexp.js","webpack:///./src/components/postPreview/Content.js","webpack:///./src/components/PostPreview.js"],"names":["Tags","_ref","pageContext","data","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_4__","className","tag","allMarkdownRemark","edges","map","_ref2","index","node","fields","slug","includes","_components_PostPreview__WEBPACK_IMPORTED_MODULE_5__","key","id","query","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__","PostTitle","title","undefined","to","frontmatter","date","icon","react__WEBPACK_IMPORTED_MODULE_1___default","tags","gatsby__WEBPACK_IMPORTED_MODULE_2__","$export","$includes","P","el","this","arguments","length","context","F","searchString","indexOf","isRegExp","defined","module","exports","that","NAME","TypeError","String","MATCH","KEY","re","e","f","Content","react_default","description","gatsby_browser_entry","PostPreview","postPreview_Content"],"mappings":"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","file":"component---src-templates-tags-js-e7916836ed62d002a76f.js","sourcesContent":["import React from 'react';\r\nimport { graphql } from 'gatsby';\r\n\r\nimport Layout from '../components/Layout';\r\nimport PostPreview from '../components/PostPreview';\r\n\r\nconst Tags = ({ pageContext, data }) => {\r\n    return (\r\n        <Layout >\r\n            <h1 className=\"is-size-2 has-text-weight-bold\">\r\n                # {pageContext.tag}\r\n            </h1>\r\n            <br />\r\n            {data.allMarkdownRemark.edges.map(({ node }, index) => {\r\n                if (!node.fields.slug.includes('/drafts')) {\r\n                    return <PostPreview data={node} key={node.id} />;\r\n                }\r\n                return null;\r\n            })}\r\n        </Layout >\r\n    );\r\n};\r\n\r\nexport default Tags;\r\n\r\nexport const query = graphql`\r\n    query TagsQuery($tag: String!) {\r\n        allMarkdownRemark(filter: {frontmatter: {tags: {eq: $tag}}}) {\r\n            edges {\r\n                node {\r\n                    fields {\r\n                        slug\r\n                    }\r\n                    frontmatter {\r\n                        tags\r\n                        title\r\n                        date(formatString: \"DD MMMM, YYYY\", locale:\"pt-br\")\r\n                        description\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst PostTitle = ({ data }) => {\r\n    let title;\r\n\r\n    if (data.fields !== undefined) {\r\n        title =\r\n            <Link to={data.fields.slug}>\r\n                <h1 className=\"postpreview-title is-link\">{data.frontmatter.title}</h1>\r\n            </Link>;\r\n    } else {\r\n        title = <h1 className=\"postpreview-title\">{data.frontmatter.title}</h1>\r\n    }\r\n\r\n    return (\r\n        <div className=\"has-text-grey\">\r\n            {title}\r\n            <small className=\"has-text-grey\">\r\n                {data.frontmatter.date}\r\n                <span className=\"icon\">\r\n                    <FontAwesomeIcon icon='calendar-alt' />\r\n                </span>\r\n            </small>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostTitle;","import React from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nconst Tags = ({ data }) => (\r\n    <div className=\"tags postpreview-tags\">\r\n        {data.frontmatter.tags.map((tag, index) => (\r\n            <Link to={`/tag/${tag}`} className=\"tag\" key={index}>\r\n                <span>{tag}</span>\r\n            </Link>\r\n        ))}\r\n    </div >\r\n);\r\n\r\nexport default Tags;","'use strict';\n// https://github.com/tc39/Array.prototype.includes\nvar $export = require('./_export');\nvar $includes = require('./_array-includes')(true);\n\n$export($export.P, 'Array', {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nrequire('./_add-to-unscopables')('includes');\n","// 21.1.3.7 String.prototype.includes(searchString, position = 0)\n'use strict';\nvar $export = require('./_export');\nvar context = require('./_string-context');\nvar INCLUDES = 'includes';\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~context(this, searchString, INCLUDES)\n      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n","var MATCH = require('./_wks')('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nimport PostTitle from '../shared/PostTitle';\r\n\r\nconst Content = ({ data }) => (\r\n    <div className=\"content\">\r\n        <PostTitle data={data} />\r\n\r\n        <p className=\"postpreview-content is-size-5\">\r\n            {data.frontmatter.description}\r\n        </p>\r\n        <p className=\"postpreview-readmore is-size-5\">\r\n            <Link to={data.fields.slug}>\r\n                Leia mais...\r\n            </Link>\r\n        </p>\r\n    </div >\r\n);\r\n\r\nexport default Content;","import React from 'react';\r\n\r\nimport Content from './postPreview/Content';\r\nimport Tags from './shared/Tags';\r\n\r\nconst PostPreview = ({ data }) => (\r\n    <div className=\"box grow\">\r\n        <article className=\"media\">\r\n            <div className=\"media-content\">\r\n                <Content data={data} />\r\n                <Tags data={data} />\r\n            </div>\r\n        </article>\r\n    </div>\r\n);\r\n\r\nexport default PostPreview;\r\n"],"sourceRoot":""}