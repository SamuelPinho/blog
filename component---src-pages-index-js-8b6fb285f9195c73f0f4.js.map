{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/shared/PostTitle.js","webpack:///./src/components/shared/Tags.js","webpack:///./node_modules/core-js/modules/es7.array.includes.js","webpack:///./node_modules/core-js/modules/es6.string.includes.js","webpack:///./node_modules/core-js/modules/_string-context.js","webpack:///./node_modules/core-js/modules/_fails-is-regexp.js","webpack:///./src/components/postPreview/Content.js","webpack:///./src/components/PostPreview.js"],"names":["IndexPage","_ref","data","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_4__","allMarkdownRemark","edges","map","_ref2","node","fields","slug","includes","_components_PostPreview__WEBPACK_IMPORTED_MODULE_5__","key","id","query","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__","PostTitle","title","undefined","to","className","frontmatter","date","icon","Tags","react__WEBPACK_IMPORTED_MODULE_1___default","tags","tag","index","gatsby__WEBPACK_IMPORTED_MODULE_2__","$export","$includes","P","el","this","arguments","length","context","F","searchString","indexOf","isRegExp","defined","module","exports","that","NAME","TypeError","String","MATCH","KEY","re","e","f","Content","react_default","description","gatsby_browser_entry","PostPreview","postPreview_Content"],"mappings":"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","file":"component---src-pages-index-js-8b6fb285f9195c73f0f4.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/Layout';\nimport PostPreview from '../components/PostPreview';\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    {data.allMarkdownRemark.edges.map(({ node }) => {\n      if (!node.fields.slug.includes('/drafts')) {\n        return <PostPreview data={node} key={node.id} />\n      }\n      return null\n    })}\n\n  </Layout>\n);\n\nexport default IndexPage;\n\nexport const query = graphql`\n  query IndexQuery {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            tags\n            title\n            date(formatString: \"DD MMMM, YYYY\", locale:\"pt-br\")\n            description\n          }\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 290)\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst PostTitle = ({ data }) => {\r\n    let title;\r\n\r\n    if (data.fields !== undefined) {\r\n        title =\r\n            <Link to={data.fields.slug}>\r\n                <h1 className=\"postpreview-title is-link\">{data.frontmatter.title}</h1>\r\n            </Link>;\r\n    } else {\r\n        title = <h1 className=\"postpreview-title\">{data.frontmatter.title}</h1>\r\n    }\r\n\r\n    return (\r\n        <div className=\"has-text-grey\">\r\n            {title}\r\n            <small className=\"has-text-grey\">\r\n                {data.frontmatter.date}\r\n                <span className=\"icon\">\r\n                    <FontAwesomeIcon icon='calendar-alt' />\r\n                </span>\r\n            </small>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostTitle;","import React from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nconst Tags = ({ data }) => (\r\n    <div className=\"tags postpreview-tags\">\r\n        {data.frontmatter.tags.map((tag, index) => (\r\n            <Link to={`/tag/${tag}`} className=\"tag\" key={index}>\r\n                <span>{tag}</span>\r\n            </Link>\r\n        ))}\r\n    </div >\r\n);\r\n\r\nexport default Tags;","'use strict';\n// https://github.com/tc39/Array.prototype.includes\nvar $export = require('./_export');\nvar $includes = require('./_array-includes')(true);\n\n$export($export.P, 'Array', {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nrequire('./_add-to-unscopables')('includes');\n","// 21.1.3.7 String.prototype.includes(searchString, position = 0)\n'use strict';\nvar $export = require('./_export');\nvar context = require('./_string-context');\nvar INCLUDES = 'includes';\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~context(this, searchString, INCLUDES)\n      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n","var MATCH = require('./_wks')('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nimport PostTitle from '../shared/PostTitle';\r\n\r\nconst Content = ({ data }) => (\r\n    <div className=\"content\">\r\n        <PostTitle data={data} />\r\n\r\n        <p className=\"postpreview-content is-size-5\">\r\n            {data.frontmatter.description}\r\n        </p>\r\n        <p className=\"postpreview-readmore is-size-5\">\r\n            <Link to={data.fields.slug}>\r\n                Leia mais...\r\n            </Link>\r\n        </p>\r\n    </div >\r\n);\r\n\r\nexport default Content;","import React from 'react';\r\n\r\nimport Content from './postPreview/Content';\r\nimport Tags from './shared/Tags';\r\n\r\nconst PostPreview = ({ data }) => (\r\n    <div className=\"box grow\">\r\n        <article className=\"media\">\r\n            <div className=\"media-content\">\r\n                <Content data={data} />\r\n                <Tags data={data} />\r\n            </div>\r\n        </article>\r\n    </div>\r\n);\r\n\r\nexport default PostPreview;\r\n"],"sourceRoot":""}