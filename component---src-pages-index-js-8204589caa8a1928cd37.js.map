{"version":3,"sources":["webpack:///./src/components/postPreview.js","webpack:///./src/pages/index.js"],"names":["PostPreview","_ref","data","react_default","a","createElement","className","key","id","gatsby_browser_entry","to","fields","slug","frontmatter","title","date","index_es","icon","size","description","categorias","map","tag","index","tags","IndexPage","layout","allMarkdownRemark","edges","_ref2","node","postPreview","query"],"mappings":"sJAgDeA,EA5CK,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMC,IAAKL,EAAKM,IAC3BL,EAAAC,EAAAC,cAAA,WAASC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAACI,EAAA,KAAD,CAAMC,GAAIR,EAAKS,OAAOC,MAClBT,EAAAC,EAAAC,cAAA,MAAIC,UAAU,6BAA6BJ,EAAKW,YAAYC,QAEhEX,EAAAC,EAAAC,cAAA,SAAOC,UAAU,iBAAjB,cACeH,EAAAC,EAAAC,cAAA,cAASH,EAAKW,YAAYE,MACrCZ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QACZH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAiBC,KAAK,eAAeC,KAAK,OAGlDf,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iCAERJ,EAAKW,YAAYM,aAEtBhB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kCACTH,EAAAC,EAAAC,cAACI,EAAA,KAAD,CAAMC,GAAIR,EAAKS,OAAOC,MAClBT,EAAAC,EAAAC,cAAA,6BAKhBF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACVJ,EAAKW,YAAYO,WAAWC,IAAI,SAACC,EAAKC,GAAN,OAC7BpB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAwBC,IAAKgB,GAAQD,KAExDpB,EAAKW,YAAYW,KAAKH,IAAI,SAACC,EAAKC,GAAN,OACvBpB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAgBC,IAAKgB,GAAQD,gDCvB9DG,UATG,SAAAxB,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAChBC,EAAAC,EAAAC,cAACqB,EAAA,EAAD,KACGxB,EAAKyB,kBAAkBC,MAAMP,IAAI,SAAAQ,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAChC3B,EAAAC,EAAAC,cAAC0B,EAAD,CAAa7B,KAAM4B,QAHzB,IAWaE,EAAK","file":"component---src-pages-index-js-8204589caa8a1928cd37.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst PostPreview = ({ data }) => (\r\n    <div className=\"box\" key={data.id}>\r\n        <article className=\"media\">\r\n            <div className=\"media-content\">\r\n                <div className=\"content\">\r\n                    <p>\r\n                        <Link to={data.fields.slug}>\r\n                            <h3 className=\"postpreview-title is-link\">{data.frontmatter.title}</h3>\r\n                        </Link>\r\n                        <small className=\"has-text-grey\">\r\n                            postado em <strong>{data.frontmatter.date}</strong>\r\n                            <span className=\"icon\">\r\n                                <FontAwesomeIcon icon='calendar-alt' size=\"\" />\r\n                            </span>\r\n                        </small>\r\n                        <br />\r\n                        <p className=\"postpreview-content is-size-5\">\r\n\r\n                            {data.frontmatter.description}\r\n                        </p>\r\n                        <p className=\"postpreview-readmore is-size-5\">\r\n                            <Link to={data.fields.slug}>\r\n                                <p>Leia mais...</p>\r\n                            </Link>\r\n                        </p>\r\n                    </p>\r\n                </div>\r\n                <nav className=\"level is-mobile\">\r\n                    <div className=\"level-left\">\r\n                        <div className=\"tags postpreview-tags\">\r\n                            {data.frontmatter.categorias.map((tag, index) => (\r\n                                <span className=\"tag is-info is-medium\" key={index}>{tag}</span>\r\n                            ))}\r\n                            {data.frontmatter.tags.map((tag, index) => (\r\n                                <span className=\"tag is-medium\" key={index}>{tag}</span>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        </article>\r\n    </div>\r\n);\r\n\r\nexport default PostPreview;\r\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout';\nimport PostPreview from '../components/postPreview';\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    {data.allMarkdownRemark.edges.map(({ node }) => (\n      <PostPreview data={node} />\n    ))}\n\n  </Layout>\n);\n\nexport default IndexPage;\n\nexport const query = graphql`\n  query IndexQuery {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            tags\n            title\n            date(formatString: \"DD MMMM, YYYY\", locale:\"pt-br\")\n            categorias\n            description\n          }\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 290)\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}